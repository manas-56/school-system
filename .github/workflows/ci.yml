name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed by SonarCloud for proper blame info

      # Step 2: Set up Java 17
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Install Node.js
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Step 4: Install frontend dependencies
      - name: Install frontend dependencies
        run: cd frontend && npm ci

      # Step 5: Install backend dependencies
      - name: Install backend dependencies
        run: cd backend && npm ci

      # Step 6: Run frontend tests
      - name: Run frontend tests
        run: cd frontend && npm test -- --coverage

      # Step 7: Run backend tests
      - name: Run backend tests
        run: cd backend && npm test -- --coverage

      # Step 8: SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=manas-56_school-system
            -Dsonar.organization=manas-56
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Build Docker image for frontend
      - name: Build Docker image for frontend
        run: |
          docker build -t karirm/school-system-frontend:latest ./frontend

      # Step 10: Build Docker image for backend
      - name: Build Docker image for backend
        run: |
          docker build -t karirm/school-system-backend:latest ./backend

      # Step 11: Push Docker images to Docker Hub
      - name: Push Docker images to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.karirm}}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${karirm}" | docker login -u "${karirm}" --password-stdin
          docker push karirm/school-system-frontend:latest
          docker push karirm/school-system-backend:latest